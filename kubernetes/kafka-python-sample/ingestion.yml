# https://kubernetes.io/docs/concepts/workloads/controllers/deployment/
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ingestion
  labels:
    app: ingestion
spec:
  selector:
    matchLabels:
      app: ingestion
  replicas: 1
  # strategy:
  #   rollingUpdate:
  #     maxSurge: 25%
  #     maxUnavailable: 25%
  #   type: RollingUpdate
  template:
    metadata:
      # annotations:
      #   kubectl.kubernetes.io/default-container: ingestion
      labels:
        app: ingestion
    spec:
      # initContainers:
      # Init containers are exactly like regular containers, except:
      # - Init containers always run to completion.
      # - Each init container must complete successfully before the next one starts.
      containers:
        - name: ingestion
          image: sample-python-kafka-service:2
          imagePullPolicy: IfNotPresent
          # resources:
          #   requests:
          #     cpu: 100m
          #     memory: 100Mi
          #   limits:
          #     cpu: 100m
          #     memory: 100Mi
          # livenessProbe:
          #   tcpSocket:
          #     port: 80
          #   initialDelaySeconds: 5
          #   timeoutSeconds: 5
          #   successThreshold: 1
          #   failureThreshold: 3
          #   periodSeconds: 10
          # readinessProbe:
          #   httpGet:
          #     path: /_status/healthz
          #     port: 80
          #   initialDelaySeconds: 5
          #   timeoutSeconds: 2
          #   successThreshold: 1
          #   failureThreshold: 3
          #   periodSeconds: 10
          env:
            # - name: DB_HOST
            #   valueFrom:
            #     configMapKeyRef:
            #       name: ingestion
            #       key: DB_HOST
            - name: KAFKA_BOOTSTRAP_SERVERS
              value: kafka-0.kafka-svc.kafka.svc.cluster.local
            - name: SERVICE_NAME
              value: ingestion-service
          ports:
            - containerPort: 8080
              name: ingestion
          volumeMounts:
            - name: commonfs
              mountPath: /mnt/data
      volumes:
        - name: commonfs
          persistentVolumeClaim:
            claimName: commonfspvclaim
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: ingestion
spec:
  type: NodePort
  ports:
    - targetPort: 8080
      port: 8080
      nodePort: 32601
  selector:
    app: ingestion
