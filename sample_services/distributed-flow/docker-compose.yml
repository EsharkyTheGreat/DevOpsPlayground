services:
  file-ingestion-service:
    image: distributed-flow
    ports:
      - "8801:8080"
    env_file:
      - "local.env"
    environment:
      SERVICE_NAME: file-ingestion-service
    volumes:
      - clinical_storage:/mnt/data
    depends_on:
      - kafka
  file-translation-service:
    image: distributed-flow
    ports:
      - "8802:8080"
    env_file:
      - "local.env"
    environment:
      SERVICE_NAME: file-translation-service
    volumes:
      - clinical_storage:/mnt/data
    depends_on:
      - kafka
  file-size-service:
    image: distributed-flow
    ports:
      - "8803:8080"
    env_file:
      - "local.env"
    environment:
      SERVICE_NAME: file-size-service
    volumes:
      - clinical_storage:/mnt/data
    depends_on:
      - kafka
  file-integrity-service:
    image: distributed-flow
    ports:
      - "8804:8080"
    env_file:
      - "local.env"
    environment:
      SERVICE_NAME: file-integrity-service
    volumes:
      - clinical_storage:/mnt/data
    depends_on:
      - kafka
  file-delivery-service:
    image: distributed-flow
    ports:
      - "8805:8080"
    env_file:
      - "local.env"
    environment:
      SERVICE_NAME: file-delivery-service
    volumes:
      - clinical_storage:/mnt/data
    depends_on:
      - kafka
  grafana:
    image: grafana/grafana-enterprise
    hostname: grafana
    ports:
      - 8765:3000
    volumes:
      - grafana_storage:/var/lib/grafana
    environment:
      GF_INSTALL_PLUGINS: "grafana-clock-panel, grafana-simple-json-datasource"

  loki:
    image: grafana/loki
    hostname: loki
    ports:
      - 3100:3100
    volumes:
      - loki_storage:/loki
  zoo1:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zoo1
    container_name: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888

  kafka:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka1
    container_name: kafka1
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9999:9999"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zoo1
  kafka_ui:
    image: provectuslabs/kafka-ui
    ports:
      - 3333:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: "true"
  filebrowser:
    image: hurlenko/filebrowser
    ports:
      - 2757:8080
    volumes:
      - clinical_storage:/data
  masking-rds:
    hostname: maskingrds
    image: mysql:latest
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=dbpass
  mask-cache:
    image: redis:latest
    hostname: maskcache
    ports:
      - 6379:6379
  redis-ui:
    image: redis/redisinsight:latest
    ports:
      - 5540:5540
    volumes:
      - redisinsightdata:/data

volumes:
  clinical_storage:
    external: true
  redisinsightdata:
  loki_storage:
  grafana_storage: